{"version":3,"sources":["components/styles.module.css","App.module.css","components/Header.jsx","components/LeftBlock.jsx","components/Core.jsx","components/Forecast.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","LeftBlock","props","useState","advise1","advise2","advise3","advise4","advise5","advise6","advise7","advice","Block","valueText","valueT","inputs","input","class","onChange","getCity","type","placeholder","aria-label","aria-describedby","onClick","getCurrentWeather","id","Core","CoreInfo","wrapperInfo","CurrentW","temp","name","windSpeed","description","Map","Forecast","IntoForecast","title","ForecastInfo","App","pog","state","cod","cnt","city","lng","lat","API_KEY","a","fetch","response","json","data","setState","main","temp_max","wind","speed","weather","coord","lon","e","console","log","message","target","value","this","Back","Back2","Back3","Back4","Back5","Back6","Back7","information","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a44ae4d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"styles_Header__12Mb-\",\"CoreInfo\":\"styles_CoreInfo__2knfC\",\"rain\":\"styles_rain__2y_VL\",\"rain2\":\"styles_rain2__LCW5g\",\"RainAll\":\"styles_RainAll__1oqze\",\"RainWithSun\":\"styles_RainWithSun__3FXtV\",\"inputs\":\"styles_inputs__nyf0Q\",\"input\":\"styles_input__rRXZL\",\"Block\":\"styles_Block__3OlbR\",\"valueText\":\"styles_valueText__IZZT9\",\"valueT\":\"styles_valueT__33v2V\",\"wrapperInfo\":\"styles_wrapperInfo__QqL47\",\"CurrentW\":\"styles_CurrentW__VAYfP\",\"temp\":\"styles_temp__3nO1y\",\"Map\":\"styles_Map__3N7Mx\",\"Forecast\":\"styles_Forecast__2LMVG\",\"IntoForecast\":\"styles_IntoForecast__RAnkO\",\"title\":\"styles_title__mHL3b\",\"ForecastInfo\":\"styles_ForecastInfo__2x3Gl\",\"advice\":\"styles_advice__3mUOU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"App_information__SoRuL\",\"weatherImage\":\"App_weatherImage__1PhJL\",\"Back\":\"App_Back__38ZPa\",\"Back2\":\"App_Back2__STppk\",\"Back3\":\"App_Back3__KzcfN\",\"Back4\":\"App_Back4__Oyz4E\",\"Back5\":\"App_Back5__13nT0\",\"Back6\":\"App_Back6__2Ypwk\",\"Back7\":\"App_Back7__KjT0q\",\"move_eye\":\"App_move_eye__2Vlg8\"};","import React from 'react';\r\nimport styles from '../components/styles.module.css';\r\nimport Rain from './Raing';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className={styles.Header}>\r\n             <p>Weather Stats</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","import React from 'react';\r\nimport {useState} from 'react';\r\nimport styles from '../components/styles.module.css';\r\n\r\nconst LeftBlock = (props) => {\r\n\r\n    const [advice, setAdvice] = useState({\r\n        advise1 : 'Советуется одеть шапку но мы же все понимаем что ты этого не сделаешь но все же попробуй.',\r\n        advise2 : 'Постарайся одолжить у Мэри Поппинс её зонтик.',\r\n        advise3 : 'Зонтик Мэри Поппинс у тебя уже есть но без теплой куртки тут никак.',\r\n        advise4 : 'Помимо теплой одеждый не забудь захватить перчатки, может удасться поиграть в снежки.',\r\n        advise5 : 'Слушай, лучше сиди дома, ну его...',\r\n        advise6 : 'Хватай плавки и газуй на пляж, быстро!',\r\n        advise7 : 'Так, вставай, бери компаньона и живо дышать свежим воздухом.',\r\n    });\r\n\r\n    return(\r\n        <div className={styles.Block}>\r\n            <div className={styles.valueText}>\r\n                    <p className={styles.valueT}>Совет:</p>\r\n                        <p className={styles.advice}>{advice.advise1}</p>\r\n            </div>\r\n                <div className={styles.inputs}>\r\n                <div className={styles.input}>\r\n                    <div class=\"input-group mb-3\">\r\n                        \r\n                        <input onChange={props.getCity} type=\"text\" class=\"form-control\" placeholder=\"Введите город...\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\r\n                        \r\n                        <div class=\"input-group-append\">\r\n                            <button onClick={props.getCurrentWeather} class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Поиск</button>\r\n                                                 \r\n                        </div>\r\n                    </div>\r\n                </div>  \r\n                {/*<div className={styles.input}>\r\n                    <div class=\"input-group mb-3\">\r\n                        \r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Введите страну...\" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\" />\r\n                        \r\n                        <div class=\"input-group-append\">\r\n                            <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\">Поиск</button>\r\n                                                 \r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n         </div>\r\n            \r\n    )\r\n}\r\nexport default LeftBlock;","import React from 'react';\r\nimport styles from '../components/styles.module.css';\r\nimport LeftBlock from './LeftBlock';\r\n\r\n\r\nconst Core = (props) => {\r\n\r\n    return(\r\n        <div className={styles.CoreInfo}>\r\n            <div className={styles.wrapperInfo}>\r\n                <div>\r\n                <p className={styles.CurrentW}>Погода</p>\r\n                <p className={styles.temp}>Город:  {props.name}</p>\r\n                <p className={styles.temp}>Температура:  {props.temp}</p>\r\n                <p className={styles.temp}>Скорость ветра:  {props.windSpeed}</p>\r\n                <p className={styles.temp}>Состояние неба:  {props.description}</p>\r\n                </div>\r\n                <div className={styles.Map}>\r\n                  \r\n                </div>\r\n                \r\n            </div>\r\n            <LeftBlock getCity={props.getCity} getCurrentWeather={props.getCurrentWeather}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Core;","import React from 'react';\r\nimport styles from '../components/styles.module.css';\r\n\r\nconst Forecast = () => {\r\n    return(\r\n        <div className={styles.Forecast}>\r\n            <div className={styles.IntoForecast}>\r\n                <div className={styles.title}></div>\r\n                <div className={styles.ForecastInfo}>\r\n                    <p>Здесь будет прогноз погоды когда я додумаюсь как использовать хитромудрый Weather API, а пока можно написать мне на почту \"enternalplayer@gmail.com\" с жалобами на баги, я вас обязательно проигнорирую.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Forecast;","import React from 'react';\nimport styles from '../src/App.module.css'\nimport Header from './components/Header';\nimport Core from './components/Core';\nimport Forecast from './components/Forecast';\n\nexport default class App extends React.Component {\n\n  pog = \"Back\";\n\n  state = {\n    cod : null,\n    cnt : 1,\n    city : '',\n    name : '',\n    temp : '',\n    windSpeed : '',\n    description: '',\n    lng: 30.52,\n    lat: 50.43\n  }\n\n  API_KEY = 'decae521ca39c0d778a1e2023be28cba';\n    \n    getCurrentWeather = async() => {  \n        \n        let response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&appid=${this.API_KEY}&lang=ru&units=metric`);\n        let data = await response.json();\n        try{\n          this.setState({\n            name : data.name,\n            temp: data.main.temp_max,\n            windSpeed : data.wind.speed + \" М/С\",\n            description : data.weather[0].description,\n            lng: data.coord.lon,\n            lat: data.coord.lat \n          });\n        }catch(e){\n          console.log(e)\n          this.setState({\n            name: data.message + \":(\",\n            temp : '',\n            windSpeed : '',\n            description: '',\n            cod: data.cod\n          })\n        }\n        \n       console.log(data);\n       \n    }\n\n    getCity = (e) => {\n      this.setState({\n        city : e.target.value\n      })\n    }\n\n  render(){\n  return (\n    <div className={this.state.description === 'ясно' ? styles.Back\n     :  this.state.description === \"облачно с прояснениями\" ? styles.Back2\n     : this.state.description === 'пасмурно' ? styles.Back3\n     : this.state.description === 'небольшой дождь' ? styles.Back4\n     : this.state.description === 'переменная облачность' ? styles.Back5\n     : this.state.cod === \"404\" ? styles.Back6\n     : this.state.description === \"\" ? styles.Back7\n     : \"\"}>\n      <Header />\n      <div className={styles.information}>\n        <div>\n          <Core getCity={this.getCity} \n           getCurrentWeather={this.getCurrentWeather}\n           temp={this.state.temp} \n           windSpeed={this.state.windSpeed}\n           description={this.state.description}\n           name={this.state.name}\n           lng={this.state.lng}\n           lat={this.state.lat}/>\n        </div>\n        \n      </div>\n      <Forecast/>\n    </div>\n  );\n}\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}